{"version":3,"sources":["components/Filter.js","components/Notification.js","components/Persons.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Filter","value","onChange","Notification","message","className","type","text","Persons","persons","onDelete","map","person","key","name","number","onClick","id","PersonForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterName","setFilterName","setMessage","setNotification","time","setTimeout","useEffect","personService","initialPersons","showPersons","filter","toLowerCase","includes","event","target","preventDefault","find","p","window","confirm","changedPerson","returnedPerson","catch","_error","concat","error","res","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7daebfae.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ value, onChange }) => <div>filter shown with <input value={value} onChange={onChange} /></div>\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={message.type}>\n      {message.text}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Persons = ({ persons, onDelete }) => persons.map((person) => {\n  return (\n    <div key={person.name}>{`${person.name} ${person.number}`} <button onClick={() => onDelete(person.id, person.name)}>delete</button></div>\n  )\n})\n\nexport default Persons\n","import React from 'react'\n\nconst PersonForm = ({ onSubmit, nameValue, nameOnChange, numberValue, numberOnChange }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>name: <input value={nameValue} onChange={nameOnChange} />\n      </div>\n      <div>number: <input value={numberValue} onChange={numberOnChange} /></div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }\n","import React, { useState, useEffect } from 'react'\n\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  const setNotification = (type, text, time=3000) => {\n    setMessage({ type, text })\n    setTimeout(() => {\n      setMessage(null)\n    }, time)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const person = persons.find(p => p.name === newName)\n    if (person) {\n      const { id } = person\n      const res = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if (!res) return\n\n      const changedPerson = { ...person, number: newNumber }\n\n      personService\n        .update(id, changedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n          setNotification('success', `Updated ${newName}`)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(_error => {\n          setNotification('error', `Information of ${newName} has already been removed from server`)\n          setPersons(persons.filter(person => person.id !== id))\n        })\n      return\n    }\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNotification('success', `Added ${newName}`)\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        setNotification('error', error.response.data.error)\n      })\n  }\n\n  const deletePerson = (id, name) => {\n    const res = window.confirm(`Delete ${name} ?`);\n    if (!res) return;\n\n    personService\n      .remove(id)\n      .then(res => {\n        setPersons(persons.filter(p => p.id !== id))\n      })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilterName(event.target.value)\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const showPersons = filterName ? persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase())) : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter value={filterName} onChange={handleFilterChange} />\n\n      <h3>Add a new</h3>\n\n      <PersonForm\n        onSubmit={addPerson}\n        nameValue={newName}\n        nameOnChange={handleNameChange}\n        numberValue={newNumber}\n        numberOnChange={handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n      <Persons persons={showPersons} onDelete={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}